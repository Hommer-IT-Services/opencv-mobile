name: Build OpenCV-Mobile for Android

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  build-android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        abi: [arm64-v8a, armeabi-v7a]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Install Ninja and CMake
        run: |
          sudo apt-get update
          sudo apt-get install -y ninja-build cmake
          ninja --version
          cmake --version

      - name: Download Android NDK
        run: |
          wget -q https://dl.google.com/android/repository/android-ndk-r21d-linux-x86_64.zip
          unzip -q android-ndk-r21d-linux-x86_64.zip -d $HOME/ndk
          echo "ANDROID_NDK=$HOME/ndk/android-ndk-r21d" >> $GITHUB_ENV

      - name: Download OpenCV source
        run: |
          wget -q https://github.com/opencv/opencv/archive/4.10.0.zip -O opencv-4.10.0.zip
          unzip -q opencv-4.10.0.zip
          mv opencv-4.10.0 opencv

      - name: Apply patches
        working-directory: opencv
        run: |
          patch -p1 -i ../patches/opencv-4.10.0-no-zlib.patch
          patch -p1 -i ../patches/disable_opengl_in_precomp.patch

      - name: Create and clear build directory
        run: |
          rm -rf build-${{ matrix.abi }}
          mkdir -p build-${{ matrix.abi }}

      - name: Configure CMake for ${{ matrix.abi }}
        working-directory: build-${{ matrix.abi }}
        run: |
          cmake \
            -G "Ninja" \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=${{ matrix.abi }} \
            -DANDROID_PLATFORM=android-21 \
            -DANDROID_USE_LEGACY_TOOLCHAIN_FILE=False \
            -DANDROID_CPP_FEATURES="no-rtti no-exceptions" \
            -DANDROID_ARM_NEON=ON \
            -DCMAKE_INSTALL_PREFIX=install \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_opencv_calib3d=ON \
            -DBUILD_opencv_core=ON \
            -DBUILD_opencv_imgproc=ON \
            -DBUILD_opencv_features2d=ON \
            -DBUILD_opencv_flann=ON \
            -DBUILD_opencv_dnn=OFF \
            -DBUILD_opencv_gapi=OFF \
            -DBUILD_opencv_highgui=OFF \
            -DBUILD_opencv_java=OFF \
            -DBUILD_opencv_java_bindings=OFF \
            -DBUILD_opencv_js=OFF \
            -DBUILD_opencv_ml=OFF \
            -DBUILD_opencv_objdetect=OFF \
            -DBUILD_opencv_photo=OFF \
            -DBUILD_opencv_python=OFF \
            -DBUILD_opencv_stitching=OFF \
            -DBUILD_opencv_ts=OFF \
            -DBUILD_opencv_video=OFF \
            -DBUILD_opencv_videoio=OFF \
            -DBUILD_opencv_world=OFF \
            -DBUILD_EXAMPLES=OFF \
            -DBUILD_ANDROID_EXAMPLES=OFF \
            -DWITH_OPENCL=OFF \
            -DWITH_OPENCL_SVM=OFF \
            -DWITH_OPENCLAMDFFT=OFF \
            -DWITH_OPENCLAMDBLAS=OFF \
            -DWITH_OPENGL=OFF \
            -DWITH_OPENEXR=OFF \
            -DWITH_TBB=OFF \
            -DWITH_V4L=OFF \
            -DWITH_IPP=OFF \
            -DWITH_EIGEN=OFF \
            -DOPENCV_DISABLE_FILESYSTEM_SUPPORT=ON \
            -DOPENCV_SKIP_ANDROID=ON \
            -DOPENCV_ENABLE_OPENGL=OFF \
            ../opencv

      - name: Debug CMake Configuration
        working-directory: build-${{ matrix.abi }}
        run: |
          cat CMakeCache.txt | grep -i opencl
          cat CMakeCache.txt | grep -i opengl
          cat CMakeCache.txt | grep -i examples
          cat CMakeCache.txt | grep -i java
          cat CMakeCache.txt | grep -i openexr

      - name: Build with Ninja
        working-directory: build-${{ matrix.abi }}
        run: ninja -j$(nproc)

      - name: Install libraries
        working-directory: build-${{ matrix.abi }}
        run: ninja install

      - name: Package libraries
        working-directory: build-${{ matrix.abi }}
        run: |
          zip -r opencv-mobile-4.10.0-android-${{ matrix.abi }}.zip install

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: opencv-mobile-4.10.0-android-${{ matrix.abi }}
          path: build-${{ matrix.abi }}/opencv-mobile-4.10.0-android-${{ matrix.abi }}.zip
